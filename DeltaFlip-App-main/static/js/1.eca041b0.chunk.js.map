{"version":3,"sources":["components/Logo/Logo.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","components/Layout/Row.tsx","components/Layout/Column.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","components/Card/index.tsx","components/Loader/CircleLoader.tsx","utils/uriToHttp.ts","components/Loader/Dots.tsx","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","utils/ENS/parseENSAddress.ts","components/PositionCard/index.tsx","utils/currencyId.ts","views/Page.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","utils/contenthashToUri.ts","hooks/useTotalSupply.ts"],"names":["BAD_SRCS","Logo","srcs","alt","rest","useState","refresh","src","find","s","onError","i","useHttpLocations","uri","ens","useMemo","parseENSAddress","undefined","resolvedContentHash","ensName","ensNodeArgument","namehash","error","registrarContract","useENSRegistrarContract","resolverAddressResult","useSingleCallResult","resolverAddress","result","resolverContract","useENSResolverContract","isZero","contenthash","loading","useENSContentHash","uriToHttp","contenthashToUri","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Column","ColumnCenter","AutoColumn","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","currency","toString","style","marginRight","StyledListLogo","ListLogo","logoURI","Card","theme","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","dropdown","rotate","keyframes","StyledSVG","svg","stroke","primary","CircleLoader","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","split","toLowerCase","substr","hash","match","name","Dots","span","getTokenLogoURL","address","StyledLogo","uriLocations","WrappedTokenInfo","ETHER","Token","symbol","ENS_NAME_REGEX","ensAddress","ensPath","FixedHeightRow","MinimalPositionCard","pair","showUnwrapped","account","useActiveWeb3React","t","useTranslation","token0","unwrappedToken","token1","showMore","setShowMore","userPoolBalance","useTokenBalance","liquidityToken","totalPoolTokens","useTotalSupply","poolTokenPercentage","JSBI","greaterThanOrEqual","raw","Percent","getLiquidityValue","token0Deposited","token1Deposited","greaterThan","BigInt","color","bold","onClick","small","toSignificant","toFixed","asset","ml","fontSize","textAlign","role","FullPositionCard","props","justifyContent","p","flexDirection","alignItems","mb","BIG_INT_ZERO","as","Link","to","currencyId","variant","startIcon","Error","StyledPage","$removePadding","gradients","bubblegum","mediaQueries","xs","sm","lg","Page","children","removePadding","hideFooterOnDesktop","TransactionState","IconWrapper","pending","success","failure","Transaction","tx","chainId","summary","receipt","status","href","getBscScanLink","renderTransactions","transactions","map","addedTime","TransactionsModal","onDismiss","dispatch","useDispatch","allTransactions","useAllTransactions","sortedRecentTransactions","orderBy","Object","values","filter","isTransactionRecent","confirmed","clearAllTransactionsCallback","useCallback","clearAllTransactions","title","headerBackground","length","scale","ConnectWalletButton","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","useExpertModeManager","expertMode","mr","QuestionHelper","text","placement","show","GlobalSettings","BodyWrapper","AppBody","UTF_8_DECODER","TextDecoder","buff","hex","startsWith","arr","Uint8Array","parseInt","hexToUint8Array","codec","getCodec","data","rmPrefix","cid","CID","toB58String","multihash","decode","digest","trim","token","contract","useTokenContract","totalSupply","TokenAmount"],"mappings":"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","file":"static/js/1.eca041b0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>{t('Loading')}</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                {t('Pooled %asset%', { asset: currency0.symbol })}:\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                {t('Pooled %asset%', { asset: currency1.symbol })}:\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">{t('Share of Pool')}</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                {t('Remove')}\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                {t('Add liquidity instead')}\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport { PageMeta } from 'components/Layout/Page'\n\nconst StyledPage = styled.div<{ $removePadding: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: ${({ $removePadding }) => ($removePadding ? '0' : '16px')};\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: ${({ $removePadding }) => ($removePadding ? '0' : '24px')};\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: ${({ $removePadding }) => ($removePadding ? '0' : '32px')};\n    padding-bottom: 0;\n    min-height: calc(100vh - 100px);\n  }\n`\n\nconst Page: React.FC<\n  React.HTMLAttributes<HTMLDivElement> & { removePadding?: boolean; hideFooterOnDesktop?: boolean }\n> = ({ children, removePadding = false, hideFooterOnDesktop = false, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage $removePadding={removePadding} {...props}>\n        {children}\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { orderBy } from 'lodash'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\nimport ConnectWalletButton from '../../ConnectWalletButton'\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = orderBy(\n    Object.values(allTransactions).filter(isTransactionRecent),\n    'addedTime',\n    'desc',\n  )\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account ? (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" placement=\"top-start\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n"],"sourceRoot":""}