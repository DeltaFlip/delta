{"version":3,"sources":["views/Nft/market/Collection/Activity/index.tsx","components/Loader/CircleLoader.tsx","components/AddressInputSelect/index.tsx","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx"],"names":["Activity","collectionAddress","useParams","collection","useGetCollection","rotate","keyframes","StyledSVG","styled","svg","size","stroke","theme","colors","primary","CircleLoader","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","ResultStatus","SubMenu","div","input","inputSecondary","radii","default","isOpen","AddressLink","Text","initialState","isFetching","resultFound","NOT_VALID","value","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","props","useState","state","setState","t","useTranslation","useEffect","isAddress","a","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","toLowerCase","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","onClick","px","fontWeight","MarketPageHeader","background","useTheme","isDark","StatBoxItem","title","stat","fontSize","color","textAlign","height","width","mx","StatBox","Flex","invertedContrast","cardBorder","card","AvatarImage","attrs","alt","src","borderColor","SearchBar","history","useHistory","push","nftsBaseUrl","MarketPageTitle","description","children","gridGap","alignItems","gridTemplateColumns","as","scale","mb","BaseSubMenu","SubMenuItems","StyledBannerImage","mediaQueries","sm","md","BannerHeader","bannerImage","bannerAlt","avatar","flexDirection","pb","BannerImage","bottom","left","BackLink","RouterLink","TopBar","justifyContent","to","LowestPriceStatBoxItem","lowestPrice","setLowestPrice","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","symbol","Header","totalSupply","numberTokensListed","totalVolumeBNB","banner","useLocation","pathname","hash","volume","parseFloat","itemsConfig","label","href","large","name","formatNumber","Number","address","Container","items","activeItem","mt"],"mappings":"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","file":"static/js/22.df0eabb8.chunk.js","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport Header from '../Header'\nimport ActivityHistory from '../../ActivityHistory/ActivityHistory'\n\nconst Activity = () => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const collection = useGetCollection(collectionAddress)\n\n  return (\n    <>\n      <Header collection={collection} />\n      <ActivityHistory collection={collection} />\n    </>\n  )\n}\n\nexport default Activity\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","import React from 'react'\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\nimport useTheme from 'hooks/useTheme'\n\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\n  const { theme } = useTheme()\n  const background = theme.isDark\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\n  return <PageHeader background={background} {...props} />\n}\n\nexport default MarketPageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\n\nexport interface StatBoxItemProps extends BoxProps {\n  title: string\n  stat: string\n}\n\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\n  <Box {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\n      {title}\n    </Text>\n    {stat === null ? (\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\n    ) : (\n      <Text fontWeight=\"600\" textAlign=\"center\">\n        {stat}\n      </Text>\n    )}\n  </Box>\n)\n\nconst StatBox = styled(Flex)`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  justify-content: space-around;\n  padding: 8px;\n  width: 100%;\n`\n\nexport default StatBox\n","import styled from 'styled-components'\n\ninterface AvatarImageProps {\n  src: string\n  borderColor?: string\n  alt?: string\n}\n\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\n  alt,\n}))<AvatarImageProps>`\n  background: url('${({ src }) => src}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default AvatarImage\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst SearchBar: React.FC = (props) => {\n  const history = useHistory()\n\n  const handleAddressClick = (value: string) => {\n    history.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\n\ninterface MarketPageTitleProps extends GridProps {\n  title: string\n  description?: ReactNode\n}\n\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\n    <Box>\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\n        {title}\n      </Heading>\n      {description}\n    </Box>\n    <Box>{children}</Box>\n  </Grid>\n)\n\nexport default MarketPageTitle\n","import { SubMenuItems } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseSubMenu = styled(SubMenuItems)`\n  background-color: transparent;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nexport default BaseSubMenu\n","import styled from 'styled-components'\n\ninterface StyledBannerImageProps {\n  src: string\n  alt?: string\n}\n\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\n  alt,\n}))<StyledBannerImageProps>`\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\n  background-image: url('${({ src }) => src}');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 100%;\n  border-radius: 32px;\n  height: 123px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 192px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 256px;\n  }\n`\n\nexport default StyledBannerImage\n","import React, { ReactNode } from 'react'\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\nimport BannerImage from './BannerImage'\n\ninterface BannerHeaderProps extends FlexProps {\n  bannerImage: string\n  bannerAlt?: string\n  avatar?: ReactNode\n}\n\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\n  return (\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\n      <Box position=\"relative\" pb=\"56px\">\n        <BannerImage src={bannerImage} alt={bannerAlt} />\n        <Box position=\"absolute\" bottom={0} left={-4}>\n          <Flex alignItems=\"flex-end\">\n            {avatar}\n            {children}\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default BannerHeader\n","import React from 'react'\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport SearchBar from '../components/SearchBar'\n\nconst BackLink = styled(RouterLink)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst TopBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n      <BackLink to={`${nftsBaseUrl}/collections`}>\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\n        {t('All Collections')}\n      </BackLink>\n      <Box>\n        <SearchBar />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TopBar\n","import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\n\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\n  collectionAddress: string\n}\n\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\n      setLowestPrice(lowestCollectionPrice)\n    }\n\n    fetchLowestPrice()\n  }, [collectionAddress, setLowestPrice])\n\n  const formattedLowestPrice =\n    lowestPrice === null\n      ? null\n      : lowestPrice.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\n}\n\nexport default LowestPriceStatBoxItem\n","import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from '@pancakeswap/uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const volume = totalVolumeBNB\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })\n    : '0'\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n    {\n      label: t('Activity'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#activity`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem\n              title={t('Items listed')}\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\n            />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || '#items'}`} mt=\"24px\" mb=\"8px\" />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n"],"sourceRoot":""}